syntax = "proto3";

option go_package = "codice/registry";

package registry;

service Registry {
  rpc JoinNetwork (JoinRequest) returns (JoinReply) {}
}

message JoinRequest {
  string addr = 1;
  string recoveryString = 2;
  int32 recoveryId = 3;
}

message JoinReply {
  int32 id = 1;
  repeated PeerInfo peer_list = 2;
}

service Update{
  rpc UpdateNetwork (UpdateMessage) returns (UpdateResponse) {}
}

message UpdateMessage{
  string updateString = 1;
  PeerInfo peer_list = 2;
}

message UpdateResponse{
  string updateResponse = 1;
}

message PeerInfo {
  int32 id = 1;
  string addr = 2;
  bool leader = 3;
}

service Service{
  rpc HeartBeat (HeartBeatMessage) returns (HeartBeatMessage) {}
}

// The request message containing string TIME
message HeartBeatMessage {
  string message = 1;
}

service election{
  rpc BullyElection (ElectionRequest) returns (ElectionReply);
  rpc UpdateRegistry (IdLeader) returns (nil);
  rpc DolevElection (ElectionRequest) returns (ElectionReply);
  rpc DKRElection(ElectionRequest) returns (ElectionReply);
}

message nil{
}

message IdLeader{
  int32 idLeader = 1;
}

message ElectionRequest{
  string election = 1;
  int32 electionId = 2;
  int32 TokenId = 3;
}

message ElectionReply{
  string electionReply = 1;
  int32 Id = 2;
}